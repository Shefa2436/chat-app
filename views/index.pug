extends layout

block content
  .chat-container
    h1= title
    p Здравей, #{user.username}!
    p
      a(href="/users/logout", class="btn-logout") Изход

    ul#messages(class="message-list")

    form#form(action="", onsubmit="send(); return false;", class="chat-form")
      input#input(type="text", autocomplete="off", placeholder="Напиши съобщение...", class="chat-input")
      button(type="submit", class="btn-primary") Изпрати

  script(src="/socket.io/socket.io.js")
  script.
    const socket = io();
    const username = "#{user.username}";

    const form = document.getElementById('form');
    const input = document.getElementById('input');
    const messages = document.getElementById('messages');

    socket.emit('user joined', username);

    function send() {
      if (input.value) {
        socket.emit('chat message', {
          user: username,
          msg: input.value
        });
        input.value = '';
      }
    }

    socket.on('chat history', function(messagesList) {
      messagesList.forEach((data) => {
        const item = document.createElement('li');
        item.innerHTML = `<strong>${data.username}</strong>: ${data.message}`;
        messages.appendChild(item);
      });
      window.scrollTo(0, document.body.scrollHeight);
    });

    socket.on('chat message', function(data) {
      const item = document.createElement('li');
      item.className = data.user === username ? "message self" : "message";
      item.innerHTML = `<strong>${data.user}</strong>: ${data.msg}`;
      messages.appendChild(item);
      window.scrollTo(0, document.body.scrollHeight);
    });

    socket.on('system message', function(msg) {
      const item = document.createElement('li');
      item.style.fontStyle = 'italic';
      item.style.color = 'gray';
      item.textContent = msg;
      messages.appendChild(item);
      window.scrollTo(0, document.body.scrollHeight);
    });